# # 4.1[22]: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые
#  встречаются в обоих наборах. Если таких чисел нет - выдать внятное диагностическое 
# сообщение. Наборы (списки) чисел можно считать заданными и не вводить с клавиатуры

# num1 = [2, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2]
# num2 = [6, 3, 9, 12, 18, 15]
# res = list(set(num1) & set(num2))
# if res != num1 or num2:
#   print(sorted(res)) 
# else:
#    print('Повторяющихся чисел нет')

# 4.2[24]: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, 
# причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два 
# соседних. Всего на грядке растет N кустов. Собирающий модуль за один заход, находясь 
# непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход 
# собирающий модуль, находясь перед некоторым кустом. На входе задано количество ягод на каждом кусте.

kust = int(input('Введите номер куста:'))
berry = [1, 2, 3, 4, 9, 11, 7, 8]
res = 0
if kust == 1:  
 res = berry[0] + berry[1]+berry[-1]
elif kust == len(berry):
     res = berry[-2] + berry[-1] + berry[0]
else:
     res = berry[kust-1] + berry[kust-2] + berry[kust]
print (res)
